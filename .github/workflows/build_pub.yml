name: Build Flutter App

on:
  # 当代码推送到 main 分支时触发工作流
  push:
    branches:
      - main

jobs:
  build:
    # 在最新的 Ubuntu 环境中运行构建
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [android, ios]  # 定义构建的目标平台

    steps:
      - name: Clone repository
        # 检出当前仓库的代码
        uses: actions/checkout@v3

      - name: Set up JDK
        # 设置 Java 开发工具包（JDK），用于 Android 构建
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # 使用 Java 11

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
           channel: stable
           flutter-version-file: pubspec.yaml # path to pubspec.yaml
      - run: flutter --version

      - name: Flutter pub get
        # 获取 Flutter 项目的依赖
        run: |
          git config --global core.longpaths true
          flutter pub get

      - name: Build ${{ matrix.platform }} app
        # 根据目标平台构建应用
        run: |
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release  # 构建 Android APK
          else
            flutter build ios --release  # 构建 iOS 应用
          fi

      - name: Upload Artifacts
        # 上传构建生成的安装包
        uses: actions/upload-artifact@v2
        with:
          name: flutter-build
          # 指定上传的文件路径
          path: |
            build/app/outputs/apk/release/app-release.apk  # Android APK
            build/ios/iphoneos/*.ipa  # iOS IPA，确保在 macOS 上构建时生成
