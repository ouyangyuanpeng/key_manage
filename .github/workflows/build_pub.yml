name: Build & Release

on:
  push:
    branches:
      - '**'
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: Android
            os: ubuntu-latest
            artifact_name: release-Android
            artifact_path: build/app/outputs/apk/release/*.apk
          - target: iOS
            os: macos-latest
            cache_pod_key: ios-pods
            cache_pod_path: ios/Pods
            cache_pod_restore_keys_hash_file: ios/Podfile.lock
            artifact_name: release-iOS
            artifact_path: build/**/*.ipa

    runs-on: ${{ matrix.os }}
    env:
      FLUTTER_VERSION: 3.24.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml # path to pubspec.yaml
          cache: true

      - name: Flutter Pub Get
        run: |
          flutter pub get

      - name: Get app version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Android
        if: matrix.target == 'Android'
        run: |
          flutter build apk --release --split-per-abi
          cd build/app/outputs/apk/release
          mv app-arm64-v8a-release.apk KeyManage-${{ env.VERSION }}-arm64-v8a.apk
          mv app-armeabi-v7a-release.apk KeyManage-${{ env.VERSION }}-armeabi-v7a.apk
          mv app-x86_64-release.apk KeyManage-${{ env.VERSION }}-x86_64.apk

      - name: Build iOS
        if: matrix.target == 'iOS'
        run: |
          cd ios
          pod install
          cd ..
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          zip -r KeyManage_${{ env.VERSION }}.ipa *.app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}

  Publish:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make tmp dir
        run: mkdir /tmp/artifacts
      - name: Download all Artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts
      - name: List all Artifacts
        run: ls -R /tmp/artifacts
      - name: Upload to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          bodyFile: changelog/${{ github.ref_name }}.md
          artifacts: /tmp/artifacts/release-Android/*.apk,/tmp/artifacts/release-iOS/*.ipa
          artifactErrorsFailBuild: true
          replacesArtifacts: true
